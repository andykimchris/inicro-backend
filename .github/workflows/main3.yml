name: Maria 3333

on:
  push:
    branches:
      - "*"

  pull_request:
    branches:
      - develop

jobs:
  test:
    name: Rspec Test Environment
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby 3.1.4
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.1.4
          rubygems: latest

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
      - name: Install system dependencies
        run: |
          sudo apt-get -y update
      - name: Install PostgreSQL client
        run: |
          sudo apt-get -yqq install libpq-dev

      - name: Start PostgreSQL service
        run: |
          sudo service postgresql restart

      - name: Log PostgreSQL server logs
        run: |
          sudo cat /var/log/postgresql/postgresql-14-main.log

      - name: Database setup
        env:
          DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/inicro_testing
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          echo "Debug: Printing Environment Variables"
          echo "DATABASE_URL: $DATABASE_URL"
          echo "RAILS_ENV: $RAILS_ENV"
          echo "RAILS_MASTER_KEY: $RAILS_MASTER_KEY"

          echo "Debug: Checking PostgreSQL version"
          psql --version

          echo "Debug: Checking PostgreSQL service status"
          service postgresql status

          echo "Debug: Checking PostgreSQL connectivity"
          echo "POSTGRES_USER: ${{ secrets.POSTGRES_USER }}"
          echo "POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}"

          export PGPASSFILE=$GITHUB_WORKSPACE/.pgpass

          # Set PGHOST to force IPv4 connection
          export PGHOST=127.0.0.1
          export PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }}

          export PGPASSFILE=$GITHUB_WORKSPACE/.pgpass
          psql -h $PGHOST -U ${{ secrets.POSTGRES_USER }} -d inicro_testing -c 'SELECT version();'

          bundle exec rails db:test:prepare db:migrate RAILS_ENV=test
      - name: RSpec tests
        env:
          DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/inicro_testing
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          bundle exec rspec
      - name: Create code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage/

  lint:
    name: Linting and Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby 3.1.4
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.1.4
          rubygems: latest

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
      - name: Security audit dependencies
        run: bundle exec bundler-audit --update

      - name: Security audit application code
        run: bundle exec brakeman -q -w2

      - name: Lint via RuboCop
        run: bundle exec rubocop --parallel -A
